The System Settings application for Ubuntu Touch.

The upstream project is hosted on launchpad, the design on the Ubuntu wiki:
https://launchpad.net/ubuntu-system-settings
https://wiki.ubuntu.com/SystemSettings


= Preparing environment =

You need to download source code with using command:

   $ bzr branch lp:ubuntu-system-settings branch-name
   $ cd branch-name

You need to install all necessary packages needed for build.
The easiest way to install dependend packages is to run command:

   $ sudo apt-get build-dep ubuntu-system-settings

Unfortunately some packages still could be missing (because we are working on trunk branch). 
The list of all requried packages is available at file: debian/control
You could install missing packages by using apt-get command. For example:

   $ sudo apt-get install libubuntu-download-manager-client-dev libubuntuoneauth-2.0-dev \
     libtrust-store-dev libupower-glib-dev libaccountsservice-dev libtimezonemap1-dev


= Building =

The build system uses CMake. To compile, create "builddir" directory 
(to separate build artefacts from source code). Then invoke cmake generation 
process and start build :

   $ mkdir builddir && cd builddir
   $ cmake .. && cmake --build . -- -j 3

To speed up generation and compilation, you could use Ninja generator instead of Make:

   $ mkdir builddir && cd builddir
   $ cmake .. -G Ninja && cmake --build .


= Running application =

To run application you need to type command:

For Make generator:

   $ sudo make install

For Ninja generator:

   $ sudo ninja install

Then from builddir run command:

   $ ./src/system-settings


= Running Unit Tests =

Unit Tests help with testing the internal working of components while
autopilot tests help with testing the UI workflow as experience by the user.
Running unit tests is quite simple and very fast.

If you want to run all tests, then run the following command from the builddir,

   $ ctest --output-on-failure
   
If you want more verbose output, then run,

   $ ctest -VV

You could filter individual tests by using "-R <regex>" or "--tests-regex <regex>" parameter.
For example to run only tests which contains "bluetooth" word you could specify:

   $ ctest --tests-regex bluetooth


= Running autopilot tests

Autopilot tests are functional tests, which emulate using application by touch.

To run autopilot tests, you need following packages:

   $ sudo apt-get install ubuntu-ui-toolkit-autopilot python3-autopilot

To run all tests type commands:

   $ cd tests/autopilot
   $ autopilot3 run ubuntu_system_settings

To see what test cases a test suite has, and selectively run only some of them, use:
   $ autopilot3 list ubuntu_system_settings
   

